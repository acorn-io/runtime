---
# Source: traefik/templates/rbac/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: traefik
  namespace: acorn-system
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/managed-by: Acorn
    app.kubernetes.io/instance: traefik
---
# Source: traefik/templates/rbac/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/managed-by: Acorn
    app.kubernetes.io/instance: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - middlewares
      - middlewaretcps
      - tlsoptions
      - tlsstores
      - traefikservices
      - serverstransports
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/managed-by: Acorn
    app.kubernetes.io/instance: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
  - kind: ServiceAccount
    name: traefik
    namespace: acorn-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: acorn-system
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/managed-by: Acorn
    app.kubernetes.io/instance: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
      app.kubernetes.io/instance: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9100"
      labels:
        app.kubernetes.io/name: traefik
        app.kubernetes.io/managed-by: Acorn
        app.kubernetes.io/instance: traefik
    spec:
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      containers:
        - image: "traefik:2.8"
          imagePullPolicy: IfNotPresent
          name: traefik
          readinessProbe:
            httpGet:
              path: /ping
              port: 9000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: 9000
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: "metrics"
              containerPort: 9100
              protocol: "TCP"
            - name: "traefik"
              containerPort: 9000
              protocol: "TCP"
            - name: "web"
              containerPort: 8000
              protocol: "TCP"
            - name: "websecure"
              containerPort: 8443
              protocol: "TCP"
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
          args:
            - "--global.checknewversion"
            - "--global.sendanonymoususage=false"
            - "--entrypoints.metrics.address=:9100/tcp"
            - "--entrypoints.traefik.address=:9000/tcp"
            - "--entrypoints.web.address=:8000/tcp"
            - "--entrypoints.websecure.address=:8443/tcp"
            - "--api.dashboard=true"
            - "--ping=true"
            - "--metrics.prometheus=true"
            - "--metrics.prometheus.entrypoint=metrics"
            - "--providers.kubernetesingress"
      volumes:
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      securityContext:
        fsGroup: 65532
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/managed-by: Acorn
    app.kubernetes.io/instance: traefik
  name: traefik
spec:
  controller: traefik.io/ingress-controller
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: acorn-system
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/managed-by: Acorn
    app.kubernetes.io/instance: traefik
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/instance: traefik
  ports:
    - port: 80
      name: web
      targetPort: "web"
      protocol: TCP
    - port: 443
      name: websecure
      targetPort: "websecure"
      protocol: TCP
