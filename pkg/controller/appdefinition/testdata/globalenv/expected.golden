`apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: container-name
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: container-name
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: container-name
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: container-name
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: container-name
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"environment":[{"name":"env-name","secret":{},"value":"env-value"}],"image":"image-name","metrics":{},"probes":null}'
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: container-name
        acorn.io/managed: "true"
        acorn.io/project-name: app-namespace
    spec:
      containers:
      - env:
        - name: env-name
          value: env-value
        - name: from-cli-name
          value: from-cli-value
        image: image-name
        name: container-name
        resources: {}
      enableServiceLinks: false
      hostname: container-name
      imagePullSecrets:
      - name: container-name-pull-1234567890ab
      serviceAccountName: container-name
      terminationGracePeriodSeconds: 5
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: container-name
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: container-name
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: container-name
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/acorn-name: acorn-name
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.acorn-name
  name: acorn-name
  namespace: app-created-namespace
spec:
  appName: app-name
  appNamespace: app-namespace
  default: true
  external: app-name.acorn-name
  labels:
    acorn.io/acorn-name: acorn-name
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/managed: "true"
status: {}

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
    acorn.io/original-image: acorn-image-name
  creationTimestamp: null
  labels:
    acorn.io/acorn-name: acorn-name
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/managed: "true"
    acorn.io/parent-acorn-name: app-name
    acorn.io/public-name: app-name.acorn-name
  name: app-name-acorn-name-01b5d4ac
  namespace: app-namespace
spec:
  environment:
  - name: env-name
    value: env-value
  - name: from-cli-name
    value: from-cli-value
  image: acorn-image-name
  stop: false
status:
  appImage:
    imageData: {}
    vcs: {}
  appSpec: {}
  appStatus: {}
  columns: {}
  defaults: {}
  staged:
    appImage:
      imageData: {}
      vcs: {}
  summary: {}

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: container-name-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: acorn-name-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  environment:
  - name: from-cli-name
    value: from-cli-value
  image: test
status:
  appImage:
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    acorns:
      acorn-name:
        environment:
        - name: env-name
          value: env-value
        image: acorn-image-name
    containers:
      container-name:
        environment:
        - name: env-name
          secret: {}
          value: env-value
        image: image-name
        metrics: {}
        probes: null
  appStatus: {}
  columns: {}
  conditions:
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults: {}
  namespace: app-created-namespace
  staged:
    appImage:
      imageData: {}
      vcs: {}
  summary: {}
`
