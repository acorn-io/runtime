kind: Namespace
apiVersion: v1
metadata:
  name: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/managed": "true"
    pod-security.kubernetes.io/enforce: baseline

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: oneimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    "acorn.io/managed": "true"
spec:
  selector:
    matchLabels:
      "acorn.io/app-namespace": "app-namespace"
      "acorn.io/app-name": "app-name"
      "acorn.io/container-name": "oneimage"
      "acorn.io/managed": "true"
  template:
    metadata:
      labels:
        "acorn.io/app-namespace": "app-namespace"
        "acorn.io/app-name": "app-name"
        "acorn.io/container-name": "oneimage"
        "acorn.io/managed": "true"
      annotations:
        acorn.io/container-spec: '{"alias":{},"build":{"context":".","dockerfile":"Dockerfile"},"image":"image-name","ports":[{"expose":true,"internalPort":81,"port":80,"protocol":"http"}],"sidecars":{"left":{"alias":{},"image":"foo","ports":[{"expose":true,"internalPort":91,"port":90,"protocol":"tcp"}]}}}'
    spec:
      terminationGracePeriodSeconds: 5
      imagePullSecrets:
        - name: oneimage-pull-01234567
      enableServiceLinks: false
      shareProcessNamespace: true
      automountServiceAccountToken: false
      containers:
        - name: oneimage
          image: "image-name"
          readinessProbe:
            tcpSocket:
              port: 81
          ports:
            - containerPort: 81
              protocol: "TCP"
        - name: left
          image: "foo"
          readinessProbe:
            tcpSocket:
              port: 91
          ports:
            - containerPort: 91
              protocol: "TCP"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: buildimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    "acorn.io/managed": "true"
spec:
  selector:
    matchLabels:
      "acorn.io/app-namespace": "app-namespace"
      "acorn.io/app-name": "app-name"
      "acorn.io/container-name": "buildimage"
      "acorn.io/managed": "true"
  template:
    metadata:
      labels:
        "acorn.io/app-namespace": "app-namespace"
        "acorn.io/app-name": "app-name"
        "acorn.io/container-name": "buildimage"
        "acorn.io/managed": "true"
      annotations:
        acorn.io/container-spec: '{"alias":{},"build":{"context":".","dockerfile":"custom-dockerfile"},"image":"sha256:build-image","ports":[{"expose":true,"internalPort":81,"port":80,"protocol":"http"},{"expose":true,"internalPort":91,"port":443,"protocol":"tcp"}]}'
    spec:
      terminationGracePeriodSeconds: 5
      imagePullSecrets:
        - name: buildimage-pull-01234567
      shareProcessNamespace: true
      enableServiceLinks: false
      automountServiceAccountToken: false
      containers:
        - name: buildimage
          image: "sha256:build-image"
          readinessProbe:
            tcpSocket:
              port: 81
          ports:
            - containerPort: 81
              protocol: "TCP"
            - containerPort: 91
              protocol: "TCP"
---
kind: Service
apiVersion: v1
metadata:
  name: oneimage-publish-01234567890a
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    "acorn.io/managed": "true"
spec:
  type: LoadBalancer
  ports:
    - port: 90
      targetPort: 91
      protocol: "TCP"
      name: "90"
  selector:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    acorn.io/managed: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: oneimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    "acorn.io/managed": "true"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 81
      protocol: "TCP"
      appProtocol: "HTTP"
      name: "80"
    - port: 90
      targetPort: 91
      protocol: "TCP"
      name: "90"
  selector:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    acorn.io/managed: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: buildimage-publish-01234567890a
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    "acorn.io/managed": "true"
spec:
  type: LoadBalancer
  ports:
    - port: 443
      targetPort: 91
      protocol: "TCP"
      name: "443"
  selector:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    acorn.io/managed: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: buildimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    "acorn.io/managed": "true"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 81
      protocol: "TCP"
      appProtocol: "HTTP"
      name: "80"
    - port: 443
      targetPort: 91
      protocol: "TCP"
      name: "443"
  selector:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    acorn.io/managed: "true"
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: oneimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    "acorn.io/managed": "true"
  annotations:
    acorn.io/container-name: oneimage
    acorn.io/hostnames: localhost
    acorn.io/port-number: "81"
spec:
  rules:
    - host: localhost
      http:
        paths:
          - backend:
              service:
                name: oneimage
                port:
                  number: 80
            path: /
            pathType: Prefix
    - host: oneimage.app-name.app-namespace.local.on-acorn.io
      http:
        paths:
          - backend:
              service:
                name: oneimage
                port:
                  number: 80
            path: /
            pathType: Prefix
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: buildimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    "acorn.io/managed": "true"
  annotations:
    acorn.io/container-name: buildimage
    acorn.io/hostnames: buildimage.app-name.app-namespace.local.on-acorn.io
    acorn.io/port-number: "81"
spec:
  rules:
    - host: buildimage.app-name.app-namespace.local.on-acorn.io
      http:
        paths:
          - backend:
              service:
                name: buildimage
                port:
                  number: 80
            path: /
            pathType: Prefix
---
kind: AppInstance
apiVersion: acorn.io/v1
metadata:
  uid: 01234567890abcdef
  name: app-name
  namespace: app-namespace
spec:
  publishProtocols:
  - "*"
  image: test
  endpoints:
    - target: oneimage
      hostname: localhost
status:
  namespace: app-created-namespace
  appSpec:
    containers:
      oneimage:
        sidecars:
          left:
            image: "foo"
            ports:
              - port: 90
                internalPort: 91
                protocol: tcp
                expose: true
        ports:
          - port: 80
            internalPort: 81
            expose: true
            protocol: http
        image: "image-name"
        build:
          dockerfile: "Dockerfile"
          context: "."
      buildimage:
        ports:
          - port: 80
            internalPort: 81
            expose: true
            protocol: http
          - port: 443
            internalPort: 91
            expose: true
            protocol: tcp
        image: "sha256:build-image"
        build:
          dockerfile: "custom-dockerfile"
          context: "."
  conditions:
    defined:
      success: true
