`apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    both: con1val
    con1: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    both: con1val
    con1key: value
  name: con1
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    both: con1val
    con1: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    both: con1val
    con1key: value
  name: con1
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: con1
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"annotations":{"both":"con1val","con1":"value"},"image":"foo","metrics":{},"ports":[{"port":80,"protocol":"http","publish":true,"targetPort":81},{"port":80,"protocol":"http","targetPort":81},{"port":90,"protocol":"tcp","targetPort":91}],"probes":null}'
        both: con1val
        con1: value
        policy.cilium.io/proxy-visibility: <Ingress/81/TCP/HTTP>,<Ingress/81/TCP/HTTP>
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: con1
        acorn.io/managed: "true"
        both: con1val
        con1key: value
    spec:
      containers:
      - image: foo
        name: con1
        ports:
        - containerPort: 81
          protocol: TCP
        - containerPort: 91
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 81
        resources: {}
      enableServiceLinks: false
      hostname: con1
      imagePullSecrets:
      - name: con1-pull-1234567890ab
      serviceAccountName: con1
      terminationGracePeriodSeconds: 5
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  annotations:
    both: con1val
    con1: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    both: con1val
    con1key: value
  name: con1
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: con1
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    both: con2val
    con2: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con2
    acorn.io/managed: "true"
    both: con2val
    con2key: value
  name: con2
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    both: con2val
    con2: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con2
    acorn.io/managed: "true"
    both: con2val
    con2key: value
  name: con2
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: con2
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"annotations":{"both":"con2val","con2":"value"},"image":"foo","metrics":{},"ports":[{"port":80,"protocol":"http","publish":true,"targetPort":81},{"port":80,"protocol":"tcp","targetPort":81},{"port":90,"protocol":"tcp","targetPort":91}],"probes":null}'
        both: con2val
        con2: value
        policy.cilium.io/proxy-visibility: <Ingress/81/TCP/HTTP>
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: con2
        acorn.io/managed: "true"
        both: con2val
        con2key: value
    spec:
      containers:
      - image: foo
        name: con2
        ports:
        - containerPort: 81
          protocol: TCP
        - containerPort: 91
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 81
        resources: {}
      enableServiceLinks: false
      hostname: con2
      imagePullSecrets:
      - name: con2-pull-1234567890ab
      serviceAccountName: con2
      terminationGracePeriodSeconds: 5
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  annotations:
    both: con2val
    con2: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con2
    acorn.io/managed: "true"
    both: con2val
    con2key: value
  name: con2
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: con2
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con3
    acorn.io/managed: "true"
  name: con3
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con3
    acorn.io/managed: "true"
  name: con3
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: con3
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"image":"foo","metrics":{},"ports":[{"port":100,"protocol":"udp","publish":true,"targetPort":101},{"port":100,"protocol":"udp","targetPort":101}],"probes":null}'
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: con3
        acorn.io/managed: "true"
    spec:
      containers:
      - image: foo
        name: con3
        ports:
        - containerPort: 101
          protocol: UDP
        resources: {}
      enableServiceLinks: false
      hostname: con3
      imagePullSecrets:
      - name: con3-pull-1234567890ab
      serviceAccountName: con3
      terminationGracePeriodSeconds: 5
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con3
    acorn.io/managed: "true"
  name: con3
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: con3
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.con1
  name: con1
  namespace: app-created-namespace
spec:
  annotations:
    both: con1val
    con1: value
  appName: app-name
  appNamespace: app-namespace
  container: con1
  default: false
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    both: con1val
    con1key: value
  ports:
  - port: 80
    protocol: http
    publish: true
    targetPort: 81
  - port: 90
    protocol: tcp
    targetPort: 91
status: {}

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: con2
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.con2
  name: con2
  namespace: app-created-namespace
spec:
  annotations:
    both: con2val
    con2: value
  appName: app-name
  appNamespace: app-namespace
  container: con2
  default: false
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: con2
    acorn.io/managed: "true"
    both: con2val
    con2key: value
  ports:
  - port: 80
    protocol: http
    publish: true
    targetPort: 81
  - port: 90
    protocol: tcp
    targetPort: 91
status: {}

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: con3
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.con3
  name: con3
  namespace: app-created-namespace
spec:
  appName: app-name
  appNamespace: app-namespace
  container: con3
  default: false
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: con3
    acorn.io/managed: "true"
  ports:
  - port: 100
    protocol: udp
    publish: true
    targetPort: 101
status: {}

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: con1-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: con2-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: con3-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  image: test
  labels:
  - key: con1key
    resourceName: con1
    resourceType: container
    value: value
  - key: con2key
    resourceName: con2
    resourceType: container
    value: value
  - key: both
    resourceName: con1
    resourceType: container
    value: con1val
  - key: both
    resourceName: con2
    resourceType: container
    value: con2val
status:
  appImage:
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    containers:
      con1:
        annotations:
          both: con1val
          con1: value
        image: foo
        metrics: {}
        ports:
        - port: 80
          protocol: http
          publish: true
          targetPort: 81
        - port: 80
          protocol: http
          targetPort: 81
        - port: 90
          protocol: tcp
          targetPort: 91
        probes: null
      con2:
        annotations:
          both: con2val
          con2: value
        image: foo
        metrics: {}
        ports:
        - port: 80
          protocol: http
          publish: true
          targetPort: 81
        - port: 80
          protocol: tcp
          targetPort: 81
        - port: 90
          protocol: tcp
          targetPort: 91
        probes: null
      con3:
        image: foo
        metrics: {}
        ports:
        - port: 100
          protocol: udp
          publish: true
          targetPort: 101
        - port: 100
          protocol: udp
          targetPort: 101
        probes: null
  appStatus: {}
  columns: {}
  conditions:
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults: {}
  namespace: app-created-namespace
`
