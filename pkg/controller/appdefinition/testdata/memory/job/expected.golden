`apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/job-name: oneimage
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: oneimage
  namespace: app-created-namespace

---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    acorn.io/app-generation: "0"
    apply.acorn.io/prune: "false"
    apply.acorn.io/update: "true"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/job-name: oneimage
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: oneimage
  namespace: app-created-namespace
spec:
  backoffLimit: 1000
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"build":{"context":".","dockerfile":"Dockerfile"},"image":"image-name","metrics":{},"ports":[{"port":80,"protocol":"http","targetPort":81}],"probes":null,"sidecars":{"left":{"image":"foo","metrics":{},"ports":[{"port":90,"protocol":"tcp","targetPort":91}],"probes":null}}}'
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/job-name: oneimage
        acorn.io/managed: "true"
        acorn.io/project-name: app-namespace
    spec:
      containers:
      - env:
        - name: ACORN_EVENT
          value: create
        image: image-name
        name: oneimage
        ports:
        - containerPort: 81
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 81
        resources:
          limits:
            memory: 1Mi
          requests:
            memory: 1Mi
        volumeMounts:
        - mountPath: /run/secrets
          name: acorn-job-output-helper
      - env:
        - name: ACORN_EVENT
          value: create
        image: foo
        name: left
        ports:
        - containerPort: 91
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 91
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets
          name: acorn-job-output-helper
      - command:
        - /usr/local/bin/acorn-job-helper-init
        env:
        - name: ACORN_EVENT
          value: create
        image: ghcr.io/acorn-io/runtime:main
        imagePullPolicy: IfNotPresent
        name: acorn-job-output-helper
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets
          name: acorn-job-output-helper
      enableServiceLinks: false
      imagePullSecrets:
      - name: oneimage-pull-1234567890ab
      restartPolicy: Never
      serviceAccountName: oneimage
      terminationGracePeriodSeconds: 5
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 1M
        name: acorn-job-output-helper
status: {}

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJnaGNyLmlvIjp7ImF1dGgiOiJPZz09In0sImluZGV4LmRvY2tlci5pbyI6eyJhdXRoIjoiT2c9PSJ9fX0=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: oneimage-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  image: test
  memory:
    oneimage: 1048576
status:
  appImage:
    buildContext: {}
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    jobs:
      oneimage:
        build:
          context: .
          dockerfile: Dockerfile
        image: image-name
        metrics: {}
        ports:
        - port: 80
          protocol: http
          targetPort: 81
        probes: null
        sidecars:
          left:
            image: foo
            metrics: {}
            ports:
            - port: 90
              protocol: tcp
              targetPort: 91
            probes: null
  appStatus:
    jobs:
      oneimage: {}
  columns: {}
  conditions:
    reason: Success
    status: "True"
    success: true
    type: scheduling
    reason: Success
    status: "True"
    success: true
    type: defaults
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults:
    memory:
      "": 0
      left: 0
      oneimage: 0
  namespace: app-created-namespace
  observedGeneration: 1
  scheduling:
    left:
      requirements: {}
    oneimage:
      requirements:
        limits:
          memory: 1Mi
        requests:
          memory: 1Mi
  staged:
    appImage:
      buildContext: {}
      imageData: {}
      vcs: {}
  summary: {}
`
