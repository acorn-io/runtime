`apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: con1-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    acorn.io/config-hash: ""
    allconsa1: value
    cona1: value
    cona3: value
    globala1: value
    globala2: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
    allconsl1: value
    conl1: value
    conl3: value
    globall1: value
    globall2: value
  name: con1
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    acorn.io/config-hash: ""
    allconsa1: value
    cona1: value
    cona3: value
    globala1: value
    globala2: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
    allconsl1: value
    conl1: value
    conl3: value
    globall1: value
    globall2: value
  name: con1
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: con1
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"annotations":{"cona3":"value"},"image":"test","labels":{"conl3":"value"},"metrics":{},"ports":[{"port":80,"protocol":"http","publish":true,"targetPort":81}],"probes":null}'
        allconsa1: value
        cona1: value
        cona3: value
        globala1: value
        globala2: value
        karpenter.sh/do-not-evict: "true"
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: con1
        acorn.io/managed: "true"
        acorn.io/project-name: app-namespace
        allconsl1: value
        conl1: value
        conl3: value
        globall1: value
        globall2: value
    spec:
      containers:
      - image: test
        name: con1
        ports:
        - containerPort: 81
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 81
        resources: {}
      enableServiceLinks: false
      hostname: con1
      imagePullSecrets:
      - name: con1-pull-1234567890ab
      serviceAccountName: con1
      terminationGracePeriodSeconds: 10
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  annotations:
    acorn.io/config-hash: ""
    allconsa1: value
    cona1: value
    cona3: value
    globala1: value
    globala2: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
    allconsl1: value
    conl1: value
    conl3: value
    globall1: value
    globall2: value
  name: con1
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: con1
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
    acorn.io/config-hash: ""
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.con1
  name: con1
  namespace: app-created-namespace
spec:
  annotations:
    allconsa1: value
    cona1: value
    cona3: value
    globala1: value
    globala2: value
  appName: app-name
  appNamespace: app-namespace
  container: con1
  default: true
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: con1
    acorn.io/managed: "true"
    allconsl1: value
    conl1: value
    conl3: value
    globall1: value
    globall2: value
  ports:
  - port: 80
    protocol: http
    publish: true
    targetPort: 81
status: {}

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  labels:
    acorn.io/root-namespace: app-namespace
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  annotations:
  - key: globala1
    value: value
  - key: allconsa1
    resourceType: container
    value: value
  - key: cona1
    resourceName: con1
    resourceType: container
    value: value
  image: test
  labels:
  - key: globall1
    value: value
  - key: allconsl1
    resourceType: container
    value: value
  - key: conl1
    resourceName: con1
    resourceType: container
    value: value
status:
  appImage:
    buildContext: {}
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    annotations:
      globala2: value
    containers:
      con1:
        annotations:
          cona3: value
        image: test
        labels:
          conl3: value
        metrics: {}
        ports:
        - port: 80
          protocol: http
          publish: true
          targetPort: 81
        probes: null
    labels:
      globall2: value
  appStatus: {}
  columns: {}
  conditions:
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults: {}
  namespace: app-created-namespace
  resolvedOfferings: {}
  staged:
    appImage:
      buildContext: {}
      imageData: {}
      vcs: {}
  summary: {}
`
