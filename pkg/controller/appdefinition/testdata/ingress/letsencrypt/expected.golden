`apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: app1
    acorn.io/managed: "true"
  name: app1
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: app1
    acorn.io/managed: "true"
  name: app1
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: app1
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"image":"image-name","metrics":{},"ports":[{"port":80,"protocol":"http","publish":true,"targetPort":81}],"probes":null}'
        policy.cilium.io/proxy-visibility: <Ingress/81/TCP/HTTP>
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: app1
        acorn.io/managed: "true"
    spec:
      containers:
      - image: image-name
        name: app1
        ports:
        - containerPort: 81
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 81
        resources: {}
      enableServiceLinks: false
      hostname: app1
      imagePullSecrets:
      - name: app1-pull-1234567890ab
      serviceAccountName: app1
      terminationGracePeriodSeconds: 5
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: app1
    acorn.io/managed: "true"
  name: app1
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: app1
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: app2
    acorn.io/managed: "true"
  name: app2
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: app2
    acorn.io/managed: "true"
  name: app2
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: app2
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"image":"image-name","metrics":{},"ports":[{"port":80,"protocol":"http","publish":true,"targetPort":81}],"probes":null}'
        policy.cilium.io/proxy-visibility: <Ingress/81/TCP/HTTP>
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: app2
        acorn.io/managed: "true"
    spec:
      containers:
      - image: image-name
        name: app2
        ports:
        - containerPort: 81
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 81
        resources: {}
      enableServiceLinks: false
      hostname: app2
      imagePullSecrets:
      - name: app2-pull-1234567890ab
      serviceAccountName: app2
      terminationGracePeriodSeconds: 5
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: app2
    acorn.io/managed: "true"
  name: app2
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: app2
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: app1
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.app1
  name: app1
  namespace: app-created-namespace
spec:
  appName: app-name
  appNamespace: app-namespace
  container: app1
  default: false
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: app1
    acorn.io/managed: "true"
  ports:
  - port: 80
    protocol: http
    publish: true
    targetPort: 81
  publish:
  - hostname: ci1.acorn.not
status: {}

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: app2
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.app2
  name: app2
  namespace: app-created-namespace
spec:
  appName: app-name
  appNamespace: app-namespace
  container: app2
  default: false
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: app2
    acorn.io/managed: "true"
  ports:
  - port: 80
    protocol: http
    publish: true
    targetPort: 81
  publish:
  - hostname: ci1.acorn.not
status: {}

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: app1-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: app2-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  image: test
  ports:
  - hostname: ci1.acorn.not
    publish: true
    serviceName: ci1.acorn.not
    targetServiceName: app1
  - hostname: ci1.acorn.not
    publish: true
    serviceName: ci1.acorn.not
    targetServiceName: app2
status:
  appImage:
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    containers:
      app1:
        image: image-name
        metrics: {}
        ports:
        - port: 80
          protocol: http
          publish: true
          targetPort: 81
        probes: null
      app2:
        image: image-name
        metrics: {}
        ports:
        - port: 80
          protocol: http
          publish: true
          targetPort: 81
        probes: null
  appStatus: {}
  columns: {}
  conditions:
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults: {}
  namespace: app-created-namespace
`
