`apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    acorn.io/app-generation: "0"
    alljobsa: value
    global2a: value
    globala: value
    job1a: value
    job3a: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/job-name: job1
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
    alljobs: value
    global: value
    global2: value
    job1: value
    job3: value
  name: job1
  namespace: app-created-namespace

---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    acorn.io/app-generation: "0"
    alljobsa: value
    apply.acorn.io/prune: "false"
    apply.acorn.io/update: "true"
    global2a: value
    globala: value
    job1a: value
    job3a: value
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/job-name: job1
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
    alljobs: value
    global: value
    global2: value
    job1: value
    job3: value
  name: job1
  namespace: app-created-namespace
spec:
  backoffLimit: 1000
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"annotations":{"job3a":"value"},"build":{"context":".","dockerfile":"Dockerfile"},"image":"image-name","labels":{"job3":"value"},"metrics":{},"ports":[{"port":80,"protocol":"http","targetPort":81}],"probes":null}'
        alljobsa: value
        global2a: value
        globala: value
        job1a: value
        job3a: value
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/job-name: job1
        acorn.io/managed: "true"
        acorn.io/project-name: app-namespace
        alljobs: value
        global: value
        global2: value
        job1: value
        job3: value
    spec:
      containers:
      - env:
        - name: ACORN_EVENT
          value: create
        image: image-name
        name: job1
        ports:
        - containerPort: 81
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 81
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets
          name: acorn-job-output-helper
      - command:
        - /usr/local/bin/acorn-job-helper-init
        env:
        - name: ACORN_EVENT
          value: create
        image: ghcr.io/acorn-io/runtime:main
        imagePullPolicy: IfNotPresent
        name: acorn-job-output-helper
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets
          name: acorn-job-output-helper
      enableServiceLinks: false
      imagePullSecrets:
      - name: job1-pull-1234567890ab
      restartPolicy: Never
      serviceAccountName: job1
      terminationGracePeriodSeconds: 5
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 1M
        name: acorn-job-output-helper
status: {}

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJnaGNyLmlvIjp7ImF1dGgiOiJPZz09In0sImluZGV4LmRvY2tlci5pbyI6eyJhdXRoIjoiT2c9PSJ9fX0=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: job1-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  annotations:
  - key: globala
    value: value
  - key: alljobsa
    resourceType: job
    value: value
  - key: job1a
    resourceName: job1
    resourceType: job
    value: value
  - key: acorn.io/foo
    value: shouldbeignored
  - key: acorn.io/job-name
    value: shouldbeignored
  image: test
  labels:
  - key: global
    value: value
  - key: alljobs
    resourceType: job
    value: value
  - key: job1
    resourceName: job1
    resourceType: job
    value: value
  - key: bad1
    resourceName: job2
    resourceType: job
    value: value
  - key: bad2
    resourceType: container
    value: value
  - key: acorn.io/foo
    value: shouldbeignored
  - key: acorn.io/job-name
    value: shouldbeignored
status:
  appImage:
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    annotations:
      acorn.io/foo: shouldbeignored2
      acorn.io/job-name: shouldbeignored2
      global2a: value
    jobs:
      job1:
        annotations:
          job3a: value
        build:
          context: .
          dockerfile: Dockerfile
        image: image-name
        labels:
          job3: value
        metrics: {}
        ports:
        - port: 80
          protocol: http
          targetPort: 81
        probes: null
    labels:
      acorn.io/foo: shouldbeignored2
      acorn.io/job-name: shouldbeignored2
      global2: value
  appStatus:
    jobs:
      job1: {}
  columns: {}
  conditions:
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults: {}
  namespace: app-created-namespace
  staged:
    appImage:
      imageData: {}
      vcs: {}
  summary: {}
`
