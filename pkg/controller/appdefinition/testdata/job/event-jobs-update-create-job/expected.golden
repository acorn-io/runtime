`apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJnaGNyLmlvIjp7ImF1dGgiOiJPZz09In0sImluZGV4LmRvY2tlci5pbyI6eyJhdXRoIjoiT2c9PSJ9fX0=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: job-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    acorn.io/app-generation: "2"
    acorn.io/config-hash: ""
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/job-name: job
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: job
  namespace: app-created-namespace

---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    acorn.io/app-generation: "2"
    acorn.io/config-hash: ""
    apply.acorn.io/prune: "false"
    apply.acorn.io/update: "true"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/job-name: job
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: job
  namespace: app-created-namespace
spec:
  backoffLimit: 1000
  template:
    metadata:
      annotations:
        acorn.io/app-generation: "2"
        acorn.io/config-hash: ""
        acorn.io/container-spec: '{"events":["create","update"],"image":"only-image","metrics":{},"probes":null}'
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/job-name: job
        acorn.io/managed: "true"
        acorn.io/project-name: app-namespace
    spec:
      containers:
      - env:
        - name: ACORN_EVENT
          value: update
        image: only-image
        name: job
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets
          name: acorn-job-output-helper
      - command:
        - /usr/local/bin/acorn-job-helper-init
        env:
        - name: ACORN_EVENT
          value: update
        image: ghcr.io/acorn-io/runtime:main
        imagePullPolicy: IfNotPresent
        name: acorn-job-output-helper
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets
          name: acorn-job-output-helper
      enableServiceLinks: false
      imagePullSecrets:
      - name: job-pull-1234567890ab
      restartPolicy: Never
      serviceAccountName: job
      terminationGracePeriodSeconds: 5
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 1M
        name: acorn-job-output-helper
status: {}

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  generation: 2
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  image: test
status:
  appImage:
    buildContext: {}
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    jobs:
      job:
        events:
        - create
        - update
        image: only-image
        metrics: {}
        probes: null
  appStatus:
    jobs:
      job:
        createEventSucceeded: true
  columns: {}
  conditions:
    observedGeneration: 2
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults: {}
  namespace: app-created-namespace
  resolvedOfferings: {}
  staged:
    appImage:
      buildContext: {}
      imageData: {}
      vcs: {}
  summary: {}
`
