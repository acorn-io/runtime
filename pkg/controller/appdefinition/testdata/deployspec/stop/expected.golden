`apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: buildimage-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: oneimage-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    acorn.io/config-hash: ""
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: buildimage
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: buildimage
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    acorn.io/config-hash: ""
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: buildimage
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: buildimage
  namespace: app-created-namespace
spec:
  replicas: 0
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: buildimage
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"build":{"context":".","dockerfile":"custom-dockerfile"},"image":"sha256:build-image","metrics":{},"probes":null}'
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: buildimage
        acorn.io/managed: "true"
        acorn.io/project-name: app-namespace
    spec:
      containers:
      - image: sha256:build-image
        name: buildimage
        resources: {}
      enableServiceLinks: false
      hostname: buildimage
      imagePullSecrets:
      - name: buildimage-pull-1234567890ab
      serviceAccountName: buildimage
      terminationGracePeriodSeconds: 10
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  annotations:
    acorn.io/config-hash: ""
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: buildimage
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: buildimage
  namespace: app-created-namespace
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: buildimage
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    acorn.io/config-hash: ""
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: oneimage
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: oneimage
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    acorn.io/config-hash: ""
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: oneimage
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: oneimage
  namespace: app-created-namespace
spec:
  replicas: 0
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: oneimage
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"build":{"context":".","dockerfile":"Dockerfile"},"image":"image-name","metrics":{},"probes":null}'
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: oneimage
        acorn.io/managed: "true"
        acorn.io/project-name: app-namespace
    spec:
      containers:
      - image: image-name
        name: oneimage
        resources: {}
      enableServiceLinks: false
      hostname: oneimage
      imagePullSecrets:
      - name: oneimage-pull-1234567890ab
      serviceAccountName: oneimage
      terminationGracePeriodSeconds: 10
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  annotations:
    acorn.io/config-hash: ""
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/app-public-name: app-name
    acorn.io/container-name: oneimage
    acorn.io/managed: "true"
    acorn.io/project-name: app-namespace
  name: oneimage
  namespace: app-created-namespace
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: oneimage
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  image: test
  stop: true
status:
  appImage:
    buildContext: {}
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    containers:
      buildimage:
        build:
          context: .
          dockerfile: custom-dockerfile
        image: sha256:build-image
        metrics: {}
        probes: null
      oneimage:
        build:
          context: .
          dockerfile: Dockerfile
        image: image-name
        metrics: {}
        probes: null
  appStatus: {}
  columns: {}
  conditions:
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults: {}
  namespace: app-created-namespace
  resolvedOfferings: {}
  staged:
    appImage:
      buildContext: {}
      imageData: {}
      vcs: {}
  summary: {}
`
