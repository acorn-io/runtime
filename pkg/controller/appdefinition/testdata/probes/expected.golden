`apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: nodefault
    acorn.io/managed: "true"
  name: nodefault
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: nodefault
    acorn.io/managed: "true"
  name: nodefault
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: nodefault
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"image":"image-name","metrics":{},"ports":[{"port":80,"protocol":"http","targetPort":81}],"probes":[]}'
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: nodefault
        acorn.io/managed: "true"
    spec:
      containers:
      - image: image-name
        name: nodefault
        ports:
        - containerPort: 81
          protocol: TCP
        resources: {}
      enableServiceLinks: false
      hostname: nodefault
      imagePullSecrets:
      - name: nodefault-pull-1234567890ab
      serviceAccountName: nodefault
      terminationGracePeriodSeconds: 5
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: nodefault
    acorn.io/managed: "true"
  name: nodefault
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: nodefault
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: oneimage
    acorn.io/managed: "true"
  name: oneimage
  namespace: app-created-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: oneimage
    acorn.io/managed: "true"
  name: oneimage
  namespace: app-created-namespace
spec:
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: oneimage
      acorn.io/managed: "true"
  strategy: {}
  template:
    metadata:
      annotations:
        acorn.io/container-spec: '{"image":"image-name","metrics":{},"ports":[{"port":80,"protocol":"http","targetPort":81}],"probes":null,"sidecars":{"left":{"image":"foo","metrics":{},"probes":[{"http":{"headers":{"foo":"bar"},"url":"http://localhost/foo/bar"},"type":"readiness"},{"tcp":{"url":"garbage://1.1.1.1:1234/foo/bar"},"type":"startup"},{"exec":{"command":["/bin/true"]},"type":"liveness"}]}}}'
      creationTimestamp: null
      labels:
        acorn.io/app-name: app-name
        acorn.io/app-namespace: app-namespace
        acorn.io/app-public-name: app-name
        acorn.io/container-name: oneimage
        acorn.io/managed: "true"
    spec:
      containers:
      - image: image-name
        name: oneimage
        ports:
        - containerPort: 81
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 81
        resources: {}
      - image: foo
        livenessProbe:
          exec:
            command:
            - /bin/true
        name: left
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: foo
              value: bar
            path: /foo/bar
            port: 80
        resources: {}
        startupProbe:
          tcpSocket:
            host: 1.1.1.1
            port: 1234
      enableServiceLinks: false
      hostname: oneimage
      imagePullSecrets:
      - name: oneimage-pull-1234567890ab
      serviceAccountName: oneimage
      terminationGracePeriodSeconds: 5
status: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: oneimage
    acorn.io/managed: "true"
  name: oneimage
  namespace: app-created-namespace
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      acorn.io/app-name: app-name
      acorn.io/app-namespace: app-namespace
      acorn.io/container-name: oneimage
      acorn.io/managed: "true"
status:
  currentHealthy: 0
  desiredHealthy: 0
  disruptionsAllowed: 0
  expectedPods: 0

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: nodefault
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.nodefault
  name: nodefault
  namespace: app-created-namespace
spec:
  appName: app-name
  appNamespace: app-namespace
  container: nodefault
  default: false
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: nodefault
    acorn.io/managed: "true"
  ports:
  - port: 80
    protocol: http
    targetPort: 81
status: {}

---
apiVersion: internal.acorn.io/v1
kind: ServiceInstance
metadata:
  annotations:
    acorn.io/app-generation: "0"
  creationTimestamp: null
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: oneimage
    acorn.io/managed: "true"
    acorn.io/public-name: app-name.oneimage
  name: oneimage
  namespace: app-created-namespace
spec:
  appName: app-name
  appNamespace: app-namespace
  container: oneimage
  default: false
  labels:
    acorn.io/app-name: app-name
    acorn.io/app-namespace: app-namespace
    acorn.io/container-name: oneimage
    acorn.io/managed: "true"
  ports:
  - port: 80
    protocol: http
    targetPort: 81
status: {}

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: nodefault-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJpbmRleC5kb2NrZXIuaW8iOnsiYXV0aCI6Ik9nPT0ifX19
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    acorn.io/managed: "true"
    acorn.io/pull-secret: "true"
  name: oneimage-pull-1234567890ab
  namespace: app-created-namespace
type: kubernetes.io/dockerconfigjson

---
apiVersion: internal.acorn.io/v1
kind: AppInstance
metadata:
  creationTimestamp: null
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  image: test
status:
  appImage:
    id: test
    imageData: {}
    vcs: {}
  appSpec:
    containers:
      nodefault:
        image: image-name
        metrics: {}
        ports:
        - port: 80
          protocol: http
          targetPort: 81
        probes: []
      oneimage:
        image: image-name
        metrics: {}
        ports:
        - port: 80
          protocol: http
          targetPort: 81
        probes: null
        sidecars:
          left:
            image: foo
            metrics: {}
            probes:
            - http:
                headers:
                  foo: bar
                url: http://localhost/foo/bar
              type: readiness
            - tcp:
                url: garbage://1.1.1.1:1234/foo/bar
              type: startup
            - exec:
                command:
                - /bin/true
              type: liveness
  appStatus: {}
  columns: {}
  conditions:
    reason: Success
    status: "True"
    success: true
    type: defined
  defaults: {}
  namespace: app-created-namespace
`
